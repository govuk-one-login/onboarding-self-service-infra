AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: |
  devplatform-deploy example-waf-bootstrap template version: v0.0.1
  CloudFormation template defines Web ACL resources.
  Managed by dev-platform

Parameters:
  Environment:
    Description: "The environment to deploy the waf into."
    Type: "String"
    Default: development
    AllowedValues:
      - "development"
      - "build"
      - "staging"
      - "integration"
      - "production"
  Application:
    Description: "The application that the waf should protect."
    Type: "String"
    Default: dev
    MaxLength : 22
    AllowedPattern: "^[a-zA-Z0-9-]+$"

Conditions:
  IsProdLikeEnvironment: !Or
    - !Equals [!Ref Environment, staging]
    - !Equals [!Ref Environment, integration]
    - !Equals [!Ref Environment, production]

Mappings:
  PlatformConfiguration:
    dev:
      clslDestinationArn: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython
    build:
      clslDestinationArn: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython
    staging:
      clslDestinationArn: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython
    integration:
      clslDestinationArn: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython
    production:
      clslDestinationArn: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython

# If a rule exists in ExcludedRules, then it's action is set to Count, instead of the default action for that group.
# To upgrade a rule to follow the group action, please comment it out, so that it becomes active.
# @TODO We need to find a better way to set this up.

Resources:
  WebAcl:
    Type: AWS::WAFv2::WebACL
    Properties:
      Description: !Sub 'Web ACL for all ${Application} resources'
      Name: !Sub 'onboarding-${Application}-webacl'
      DefaultAction:
        Allow: {}

      Rules:
        - Name: AWS-CRS # Allowed in non-production
          Priority: 10
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesCommonRuleSet
          OverrideAction:
            !If
            - IsProdLikeEnvironment
            - Count: { }
            - None: { }
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: !Sub '${Application}-aws-crs-metric'

        - Name: Bad-Inputs # Allowed in non-production
          Priority: 11
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesKnownBadInputsRuleSet
          OverrideAction:
            !If
            - IsProdLikeEnvironment
            - Count: { }
            - None: { }
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: !Sub '${Application}-bad-inputs-metric'

        - Name: AWS-AWSManagedRulesAdminProtectionRuleSet # Allowed in non-production
          Priority: 12
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesAdminProtectionRuleSet
              ExcludedRules:
                - Name: AdminProtection_URIPATH
          OverrideAction:
            !If
            - IsProdLikeEnvironment
            - Count: { }
            - None: { }
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: !Sub '${Application}-admin-protection-metric'

        - Name: SqlInject-RuleSet # Allowed in non-production
          Priority: 20
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesSQLiRuleSet
          OverrideAction:
            !If
              - IsProdLikeEnvironment
              - Count: { }
              - None: { }
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: !Sub '${Application}-sql-injection-metric'

        - Name: Linux-RuleSet # Only counting
          Priority: 21
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesLinuxRuleSet
              ExcludedRules:
                - Name: LFI_URIPATH
                - Name: LFI_QUERYSTRING
                - Name: LFI_HEADER
          OverrideAction:
            None: { }
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: !Sub '${Application}-linux-metric'

        - Name: Unix-RuleSet # Only counting
          Priority: 22
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesUnixRuleSet
              ExcludedRules:
                - Name: UNIXShellCommandsVariables_QUERYARGUMENTS
                - Name: UNIXShellCommandsVariables_BODY
          OverrideAction:
            None: { }
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: !Sub '${Application}-unix-metric'

        - Name: GDS-IpList # Allowed in non-production
          Priority: 30
          Statement:
            IPSetReferenceStatement:
              Arn: !GetAtt Wafv2GdsIpSet.Arn
          Action:
            !If
              - IsProdLikeEnvironment
              - Count: { }
              - Allow: { }
          VisibilityConfig:
            CloudWatchMetricsEnabled: TRUE
            MetricName: !Sub "${Application}-gds-ip-hits-metric"
            SampledRequestsEnabled: FALSE

        - Name: Anonymous-IpList # Only counting
          Priority: 40
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesAnonymousIpList
              ExcludedRules:
                - Name: AnonymousIPList
                - Name: HostingProviderIPList
          OverrideAction:
            None: { }
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: !Sub '${Application}-anonymous-ip-list-metric'

        - Name: Reputation-IpList # Only counting
          Priority: 41
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesAmazonIpReputationList
              ExcludedRules:
                - Name: AWSManagedIPReputationList
                - Name: AWSManagedReconnaissanceList
                - Name: AWSManagedIPDDoSList
          OverrideAction:
            None: { }
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: !Sub "${Application}-reputation-ip-list-metric"

        - Name: RateBased-CountIp-RuleSet # Only counting
          Priority: 50
          Statement:
            RateBasedStatement:
              Limit: 100
              AggregateKeyType: IP
          Action:
            Count: { }
          VisibilityConfig:
            CloudWatchMetricsEnabled: true
            MetricName: !Sub "${Application}-rate-based-count-ip-metric"
            SampledRequestsEnabled: true

      Scope: REGIONAL
      Tags:
        - Key: Name
          Value: !Sub '${Application}'
      VisibilityConfig:
        SampledRequestsEnabled: true
        CloudWatchMetricsEnabled: true
        MetricName: !Sub '${Application}-metric'

  # The IP address blocks below are referenced from here:
  # https://sites.google.com/a/digital.cabinet-office.gov.uk/gds/working-at-gds/gds-internal-it/gds-internal-it-network-public-ip-addresses
  Wafv2GdsIpSet:
    Type: AWS::WAFv2::IPSet
    Properties:
      Addresses:
        - "217.196.229.77/32"
        - "217.196.229.79/32"
        - "217.196.229.80/32" #(BYOD VPN Only)
        - "217.196.229.81/32"
        - "51.149.8.0/25"
        - "51.149.8.128/29"
      IPAddressVersion: IPV4
      Scope: REGIONAL
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-Wafv2GdsIpSet"
        - Key: Service
          Value: "identity-broker"
        - Key: Source
          Value: "govuk-one-login/devplatform-demo-sam-app/WAFv2/template.yaml"

  LogAuditLogGroup:
    # checkov:skip=CKV_AWS_158:Ensure that CloudWatch Log Group is encrypted by KMS
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/onboarding-infrastructure/audit/${Application}/waf'
      RetentionInDays: 14

  CloudwatchLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Join
        - "-"
        - - 'aws-waf-logs'
          - 'onboarding'
          - !Ref Application
          - 'detected-requests'
      RetentionInDays: 30
      KmsKeyId:  !If
        - IsProdLikeEnvironment
        - !GetAtt WAFLoggingKmsKey.Arn
        - !Ref AWS::NoValue
      DataProtectionPolicy:
        Name: !Sub "data-protection-policy-${Application}-waf-logs"
        Description: Data Protection for Cloudwatch Logs
        Version: '2021-06-01'
        Statement:
          - Sid: audit-policy
            DataIdentifier:
              - arn:aws:dataprotection::aws:data-identifier/EmailAddress
              - arn:aws:dataprotection::aws:data-identifier/IpAddress
              - arn:aws:dataprotection::aws:data-identifier/Address
              - arn:aws:dataprotection::aws:data-identifier/AwsSecretKey
              - arn:aws:dataprotection::aws:data-identifier/OpenSshPrivateKey
              - arn:aws:dataprotection::aws:data-identifier/PgpPrivateKey
              - arn:aws:dataprotection::aws:data-identifier/PkcsPrivateKey
              - arn:aws:dataprotection::aws:data-identifier/PuttyPrivateKey
            Operation:
              Audit:
                FindingsDestination:
                  CloudWatchLogs:
                    LogGroup: !Ref LogAuditLogGroup
          - Sid: redact-policy
            DataIdentifier:
              - arn:aws:dataprotection::aws:data-identifier/EmailAddress
              - arn:aws:dataprotection::aws:data-identifier/IpAddress
              - arn:aws:dataprotection::aws:data-identifier/Address
              - arn:aws:dataprotection::aws:data-identifier/AwsSecretKey
              - arn:aws:dataprotection::aws:data-identifier/OpenSshPrivateKey
              - arn:aws:dataprotection::aws:data-identifier/PgpPrivateKey
              - arn:aws:dataprotection::aws:data-identifier/PkcsPrivateKey
              - arn:aws:dataprotection::aws:data-identifier/PuttyPrivateKey
            Operation:
              Deidentify:
                MaskConfig: { }

  CslsSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !FindInMap [ PlatformConfiguration, !Ref Environment, clslDestinationArn ]
      FilterPattern: ""
      LogGroupName: !Ref CloudwatchLogsGroup

  WebAclLogging:
    Type: AWS::WAFv2::LoggingConfiguration
    Properties:
      ResourceArn: !GetAtt
        - WebAcl
        - Arn
      LogDestinationConfigs:
        - !GetAtt CloudwatchLogsGroup.Arn
      LoggingFilter:
        DefaultBehavior: DROP
        Filters:
          - Behavior: KEEP
            Conditions:
              - ActionCondition:
                  Action: BLOCK
              - ActionCondition:
                  Action: EXCLUDED_AS_COUNT
            Requirement: MEETS_ANY
      RedactedFields:
        - SingleHeader:
            Name: password

  WafAclSSM:
    Type: AWS::SSM::Parameter
    Properties:
      Description: The ARN of webACL
      Name: !Sub "/onboarding-infrastructure/waf/${Application}-acl-arn"
      Type: String
      Value: !GetAtt
      - WebAcl
      - Arn

  WAFLoggingKmsKey:
    Type: AWS::KMS::Key
    Condition: IsProdLikeEnvironment
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - kms:*
            Resource: "*"
          - Effect: Allow
            Principal:
              Service: !Sub "logs.${AWS::Region}.amazonaws.com"
            Action:
              - "kms:Encrypt*"
              - "kms:Decrypt*"
              - "kms:ReEncrypt*"
              - "kms:GenerateDataKey*"
              - "kms:Describe*"
            Resource: "*"
            Condition:
              ArnLike:
                "kms:EncryptionContext:aws:logs:arn": !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*"

Outputs:
  OnboardingWebAclArn:
    Description: ARN of WebACL
    Value: !GetAtt
      - WebAcl
      - Arn
    Export:
      Name: !Sub "${Application}-waf-acl-arn"
  CloudwatchLogsGroupArn:
    Description: ARN of CloudWatch Logs Group
    Value: !GetAtt
      - CloudwatchLogsGroup
      - Arn
    Export:
      Name: !Sub "${Application}-waf-log-group"
